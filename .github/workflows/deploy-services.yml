name: Deploy BaseCMS services

on:
  push:
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  vars:
    runs-on: ubuntu-latest
    steps:
    - id: tag_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    outputs:
      version: ${{ steps.tag_version.outputs.VERSION }}

  pre-deploy:
    needs: [vars]
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,ref,author
          custom_payload: |
            {
              attachments: [{
                color: '#1d9bd1',
                text: `Deployment of ${{ github.repository }} @ ${{ needs.vars.outputs.version }} has started.`,
              }]
            }

  build:
    needs: [vars, pre-deploy]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - graphql-server
          - sitemaps
          - rss
          - hooks
          - oembed
          - google-data-api
          - omail-link-processor
    env:
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.service }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          file: services/${{ matrix.service }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [vars, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - graphql-server
          - sitemaps
          - rss
          - hooks
          - oembed
          - google-data-api
          - omail-link-processor
    env:
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.service }}:${{ needs.vars.outputs.version }}
    steps:
      - name: Deploy to Kubernetes
        run: npx @endeavorb2b/rancher2cli dl basecms-service ${{ matrix.service }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        env:
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          RANCHER_URL: ${{ secrets.RANCHER_URL }}

  post-deploy-success:
    if: success()
    needs: [vars, deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,ref,author,took
          if: always()
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                text: `Deployment of ${{ github.repository }} @ ${{ needs.vars.outputs.version }} completed in ${process.env.AS_TOOK}`,
              }]
            }
  post-deploy-failure:
    if: failure()
    needs: [vars, deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,ref,author,took
          if: always()
          custom_payload: |
            {
              attachments: [{
                color: 'danger',
                text: `Deployment of ${{ github.repository }} @ ${{ needs.vars.outputs.version }} failed in ${process.env.AS_TOOK}`,
              }]
            }
